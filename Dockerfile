Dockerfile 是一个用来构建镜像的文本文件
  FROM：定制的镜像都是基于 FROM 的镜像
  
  RUN：用于执行后面跟着的命令行命令
    RUN <命令行命令>
    RUN ["可执行文件", "参数1", "参数2"]
    
  && 符号连接命令，这样执行后，只会创建 1 层镜像
  
  COPY
    COPY [--chown=<user>:<group>] <源路径1>...  <目标路径>
    COPY [--chown=<user>:<group>] ["<源路径1>",...  "<目标路径>"]
    [--chown=<user>:<group>]：可选参数，用户改变复制到容器内文件的拥有者和属组。
 
   ADD
     和 COPY 的使用格式一致（同样需求下，官方推荐使用 COPY）。功能也类似，不同之处如下：
     优点：在执行 <源文件> 为 tar 压缩文件的话，压缩格式为 gzip, bzip2 以及 xz 的情况下，会自动复制并解压到 <目标路径>。
     缺点：在不解压的前提下，无法复制 tar 压缩文件。会令镜像构建缓存失效，从而可能会令镜像构建变得比较缓慢。具体是否使用，可以根据是否需要自动解压来决定。

  CMD
      类似于 RUN 指令，用于运行程序，但二者运行的时间点不同:
      CMD 在docker run 时运行。如果存在多个 CMD 指令，仅最后一个生效。
      RUN 是在 docker build。
      
docker build -t nginx:test .   #通过目录下的 Dockerfile 构建一个 nginx:test（镜像名称:镜像标签）,最后的 . 代表本次执行的上下文路径
